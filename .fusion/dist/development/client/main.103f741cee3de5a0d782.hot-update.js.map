{"version":3,"file":"main.103f741cee3de5a0d782.hot-update.js","sources":["/home/rook/repos/password-manager/src/components/password-entry/index.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { FormControl } from \"baseui/form-control\";\nimport { Input } from \"baseui/input\";\nimport { Slider } from \"baseui/slider\";\nimport { generate as generatePassword } from \"generate-password\";\nimport zxcvbn from \"zxcvbn\";\n\nexport default () => {\n  const [length, setLength] = useState(32);\n  const [uppercase, setUppercase] = useState(true);\n  const [numbers, setNumbers] = useState(true);\n  const [symbols, setSymbols] = useState(true);\n  const [copied, setCopied] = useState(false);\n  const [strength, setStrength] = useState(null);\n  const [password, setPassword] = React.useState(\"\");\n\n  const setNewPassword = (p) => {\n    const newPassword = p\n      ? p\n      : generatePassword({ length, numbers, uppercase, symbols });\n    const { score } = zxcvbn(newPassword);\n    setStrength(score);\n    setCopied(false);\n    setPassword(newPassword);\n  };\n\n  useEffect(() => {\n    setNewPassword();\n  }, [length, uppercase, symbols, numbers]);\n\n  return (\n    <div>\n      <FormControl\n        label={() => \"Password\"}\n        caption={() => \"Choose a strong password\"}\n      >\n        <Input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"Enter password\"\n          clearable\n          clearOnEscape\n        />\n      </FormControl>\n      <Slider\n        min={4}\n        max={64}\n        value={[length]}\n        onChange={({ value }) => setLength(value[0])}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}